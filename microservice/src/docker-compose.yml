version: '3.8'

services:
  #database section
  # sqlserverdb:
  #   image: mcr.microsoft.com/mssql/server:2019-latest
  #   container_name: sqlserverdb
  #   environment:
  #      SA_PASSWORD: 'c#fKeLGv'
  #      ACCEPT_EULA: "Y"
  #   restart: always
  #   volumes:
  #   - sqlserver_data:/var/lib/sqlserver/data 
  #   ports:
  #   - "1435:1433"
  mysqldb:
    image: mysql:8.0.29

  orderdb:
    image: mcr.microsoft.com/mssql/server:2019-latest

  productdb:
    image: mysql:8.0.29

  customerdb:
    image: postgres:alpine3.16

  basketdb:
    image: redis:alpine

  inventorydb:
    image: mongo
    
#infrastructure section
  rabbitmq:
    image: rabbitmq:3-management-alpine

  pgadmin:
    image: dpage/pgadmin4
    
  portainer:
    image: portainer/portainer-ce
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
    
  kibana:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2

#microservices api section
  product.api:
    image: ${DOCKER_REGISTRY-}product-api:${PLATFORM:-linux}-${TAG:-lastest}
    build:
      context: .
      dockerfile: Services/Product.API/Dockerfile
  
  customer.api:
    image: ${DOCKER_REGISTRY-}customer-api:${PLATFORM:-linux}-${TAG:-lastest}
    build:
      context: .
      dockerfile: Services/Customer.API/Dockerfile
  
#network section
networks:
  default:
    name: tedu_microservices
    driver: bridge

#volumes section
volumes:
  sqlserver_data:
    name: sqlserver_data
  mysql_data:
    name: mysql_data
  postgres_data:
    name: postgres_data
  portainer_data:
    name: portainer_data
  elasticsearch_data:
    name: elasticsearch_data
  jaeger_data:
    name: jaeger_data
  mongo_data:
    name: mongo_data
  pgadmin_data:
    name: pgadmin_data  